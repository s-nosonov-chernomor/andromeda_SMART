# ─────────────────────────────────────────────────────────────────────────────
# Раздел DEBUG — включает подробные логи и сводки
# enabled: true — общий уровень логов DEBUG
# log_reads: true — логировать каждый успешный READ (raw и scaled значения)
# summary_every_s: 10 — печатать сводку по каждому unit каждые N секунд (0=выкл)
debug:
  enabled: true
  log_reads: false
  summary_every_s: 10

# ─────────────────────────────────────────────────────────────────────────────
# Настройки MQTT-клиента
# host/port — адрес локального брокера
# client_id — идентификатор клиента
# base_topic — базовый префикс для ОТНОСИТЕЛЬНЫХ топиков (см. param.topic ниже)
# qos/retain — параметры публикации
mqtt:
  host: 127.0.0.1
  port: 1883
  client_id: uspd-modbus-gw
  base_topic: /devices
  qos: 0
  retain: false

# ─────────────────────────────────────────────────────────────────────────────
# Хранилище истории публикаций (только то, что реально ушло в MQTT)
# Для Windows — удобнее относительный путь sqlite:///./data/data.db
db:
  url: sqlite:///./data/data.db  # sqlite:////opt/uspd-bus/data/data.db  ← пример для Linux

# ─────────────────────────────────────────────────────────────────────────────
# Глобальные настройки опроса/поведения
# interval_ms — период одного тика цикла опроса (минимальная пауза меж проходами)
# jitter_ms — добавочный случайный «джиттер» (снимает пики публикаций)
# no_response_increment — шаг счётчика «неответов» (сейчас не используется явно)
# max_errors_before_backoff — после N подряд неответов по unit — локальный бэкофф
# backoff_ms — пауза бэкоффа для проблемного unit
# port_retry_backoff_s — (опционально) глобальный дефолт паузы переоткрытия COM
# batch_read.enabled — включить пакетное чтение последовательных регистров
# batch_read.max_bits — максимум битов (coil/discrete) на один запрос
# batch_read.max_registers — максимум регистров (holding/input) на один запрос
polling:
  interval_ms: 1000
  jitter_ms: 120
  no_response_increment: 1
  max_errors_before_backoff: 5
  backoff_ms: 500
  # port_retry_backoff_s: 6         # (опционально) глобальный дефолт, можно не задавать
  batch_read:
    enabled: true
    max_bits: 64
    max_registers: 60

# ─────────────────────────────────────────────────────────────────────────────
# Список физических линий Modbus RTU (до 4, но можно больше)
# Каждая line — отдельный поток опроса
lines:
  - name: line1                 # логическое имя линии (попадает в логи)
    device: COM4                # порт (Windows: COMx; Linux: /dev/ttyUSB0)
    baudrate: 115200
    timeout: 0.08               # таймаут ответа, сек
    parity: N                   # N (none), E (even), O (odd)
    stopbits: 1
    port_retry_backoff_s: 5     # если COM занят/упал — как часто пробовать открыть заново
    rs485_rts_toggle: false     # (зарезервировано; сейчас не используется)
    nodes:                      # список узлов (slave address / unit id) на линии
      - unit_id: 44              # Modbus slave id
        object: object1_io      # логическое имя «объекта» (используется в дефолтном топике)
        params:                 # параметры (регистры/биты) узла
          - name: q1
            register_type: coil     # тип: coil|discrete|holding|input
            address: 1001           # адрес (в документах может быть 1-based/40001; DEBUG автонормализует)
            scale: 1.0              # коэффициент; итоговое значение = raw / scale
            mode: r                 # режим: r (только чтение) | rw (чтение/запись через /on)
            publish_mode: on_change_and_interval # публикация при изменении значения on_change_and_interval / interval / on_change
            publish_interval_ms: 5000  # интервал публикации (используется, если publish_mode=interval)
            topic: site1/room2/io/q1  # (опционально) пользовательский топик публикации
                                        # относит.: /devices/site1/room2/io/q1
                                        # абсолют.: /my/custom/topic/path
          - name: q3
            register_type: coil
            address: 1002
            scale: 1.0
            mode: r
            publish_mode: on_change_and_interval
            publish_interval_ms: 5000
            topic: site1/room2/io/q3

